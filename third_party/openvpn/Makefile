# Makefile.in generated by automake 1.6.3 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
#  OpenVPN -- An application to securely tunnel IP networks
#             over a single UDP port, with support for SSL/TLS-based
#             session authentication and key exchange,
#             packet encryption, packet authentication, and
#             packet compression.
#
#  Copyright (C) 2002-2005 OpenVPN Solutions LLC <info@openvpn.net>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License version 2
#  as published by the Free Software Foundation.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program (see the file COPYING included with this
#  distribution); if not, write to the Free Software Foundation, Inc.,
#  59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
SHELL = /bin/sh

srcdir = .
top_srcdir = .

prefix = /usr/local
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/openvpn
pkglibdir = $(libdir)/openvpn
pkgincludedir = $(includedir)/openvpn
top_builddir = .

ACLOCAL = ${SHELL} /Users/al/Projects/tunnelblick/third_party/openvpn/missing --run aclocal-1.6
AUTOCONF = ${SHELL} /Users/al/Projects/tunnelblick/third_party/openvpn/missing --run autoconf
AUTOMAKE = ${SHELL} /Users/al/Projects/tunnelblick/third_party/openvpn/missing --run automake-1.6
AUTOHEADER = ${SHELL} /Users/al/Projects/tunnelblick/third_party/openvpn/missing --run autoheader

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = 
build_triplet = i386-apple-darwin8.10.1
host_alias = 
host_triplet = i386-apple-darwin8.10.1
target_alias = 
target_triplet = i386-apple-darwin8.10.1

EXEEXT = 
OBJEXT = o
PATH_SEPARATOR = :
AMTAR = ${SHELL} /Users/al/Projects/tunnelblick/third_party/openvpn/missing --run tar
AWK = awk
CC = gcc
DEPDIR = .deps
IFCONFIG = /sbin/ifconfig
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
IPROUTE = ip
PACKAGE = openvpn
PTHREAD_CC = 
PTHREAD_CFLAGS = 
PTHREAD_LIBS = 
ROUTE = /sbin/route
STRIP = 
VERSION = 2.0.9
am__include = include
am__quote = 
install_sh = /Users/al/Projects/tunnelblick/third_party/openvpn/install-sh

# This option prevents autoreconf from overriding our COPYING and
# INSTALL targets:
AUTOMAKE_OPTIONS = foreign

sbin_PROGRAMS = openvpn

nodist_openvpn_SOURCES = config.h

TESTS = t_lpback.sh t_cltsrv.sh
dist_noinst_SCRIPTS = $(TESTS)

openvpn_SOURCES = \
        base64.c base64.h \
	basic.h \
	buffer.c buffer.h \
	circ_list.h \
	common.h \
	crypto.c crypto.h \
	errlevel.h \
	error.c error.h \
	event.c event.h \
	fdmisc.c fdmisc.h \
        forward.c forward.h forward-inline.h \
	fragment.c fragment.h \
	gremlin.c gremlin.h \
	helper.c helper.h \
	init.c init.h \
	integer.h \
        interval.c interval.h \
	list.c list.h \
	lzo.c lzo.h \
	manage.c manage.h \
	mbuf.c mbuf.h \
        memdbg.h \
	misc.c misc.h \
	mroute.c mroute.h \
	mss.c mss.h \
	mtcp.c mtcp.h \
	mtu.c mtu.h \
	mudp.c mudp.h \
	multi.c multi.h \
        ntlm.c ntlm.h \
	occ.c occ.h occ-inline.h \
	openvpn.c openvpn.h \
	openvpn-plugin.h \
	options.c options.h \
	otime.c otime.h \
	packet_id.c packet_id.h \
	perf.c perf.h \
	ping.c ping.h ping-inline.h \
	plugin.c plugin.h \
	pool.c pool.h \
	proto.c proto.h \
	proxy.c proxy.h \
	push.c push.h \
	reliable.c reliable.h \
	route.c route.h \
	schedule.c schedule.h \
	session_id.c session_id.h \
	shaper.c shaper.h \
	sig.c sig.h \
	socket.c socket.h \
	socks.c socks.h \
	ssl.c ssl.h \
	status.c status.h \
	syshead.h \
	thread.c thread.h \
	tun.c tun.h


LDADD = 

man_MANS = openvpn.8

EXTRA_DIST = \
	doclean \
	$(man_MANS) \
	COPYRIGHT.GPL \
	PORTS \
	openvpn.spec \
	easy-rsa \
	sample-config-files \
	sample-keys \
	sample-scripts \
	gentoo \
	suse \
	openvpn.spec.in \
	config-win32.h \
	win32.h \
	win32.c \
	cryptoapi.h \
	cryptoapi.c \
	makefile.w32 \
        makefile.w32-vc \
	INSTALL-win32.txt \
	tap-win32 \
	install-win32 \
	service-win32 \
	contrib \
	debug \
	plugin \
        management

subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = openvpn.spec config-win32.h \
	install-win32/openvpn.nsi
sbin_PROGRAMS = openvpn$(EXEEXT)
PROGRAMS = $(sbin_PROGRAMS)

am_openvpn_OBJECTS = base64.$(OBJEXT) buffer.$(OBJEXT) crypto.$(OBJEXT) \
	error.$(OBJEXT) event.$(OBJEXT) fdmisc.$(OBJEXT) \
	forward.$(OBJEXT) fragment.$(OBJEXT) gremlin.$(OBJEXT) \
	helper.$(OBJEXT) init.$(OBJEXT) interval.$(OBJEXT) \
	list.$(OBJEXT) lzo.$(OBJEXT) manage.$(OBJEXT) mbuf.$(OBJEXT) \
	misc.$(OBJEXT) mroute.$(OBJEXT) mss.$(OBJEXT) mtcp.$(OBJEXT) \
	mtu.$(OBJEXT) mudp.$(OBJEXT) multi.$(OBJEXT) ntlm.$(OBJEXT) \
	occ.$(OBJEXT) openvpn.$(OBJEXT) options.$(OBJEXT) \
	otime.$(OBJEXT) packet_id.$(OBJEXT) perf.$(OBJEXT) \
	ping.$(OBJEXT) plugin.$(OBJEXT) pool.$(OBJEXT) proto.$(OBJEXT) \
	proxy.$(OBJEXT) push.$(OBJEXT) reliable.$(OBJEXT) \
	route.$(OBJEXT) schedule.$(OBJEXT) session_id.$(OBJEXT) \
	shaper.$(OBJEXT) sig.$(OBJEXT) socket.$(OBJEXT) socks.$(OBJEXT) \
	ssl.$(OBJEXT) status.$(OBJEXT) thread.$(OBJEXT) tun.$(OBJEXT)
nodist_openvpn_OBJECTS =
openvpn_OBJECTS = $(am_openvpn_OBJECTS) $(nodist_openvpn_OBJECTS)
openvpn_LDADD = $(LDADD)
openvpn_DEPENDENCIES = 
openvpn_LDFLAGS =
SCRIPTS = $(dist_noinst_SCRIPTS)


DEFS = -DHAVE_CONFIG_H
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I.
CPPFLAGS =  -I../lzo-2.02/staging/include/ -I. -no-cpp-precomp
LDFLAGS =  -L../lzo-2.02/staging/lib/
LIBS = -lssl -lcrypto -llzo2 
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
#DEP_FILES = $(DEPDIR)/memcmp.Po ./$(DEPDIR)/base64.Po \
#	./$(DEPDIR)/buffer.Po ./$(DEPDIR)/crypto.Po \
#	./$(DEPDIR)/error.Po ./$(DEPDIR)/event.Po \
#	./$(DEPDIR)/fdmisc.Po ./$(DEPDIR)/forward.Po \
#	./$(DEPDIR)/fragment.Po ./$(DEPDIR)/gremlin.Po \
#	./$(DEPDIR)/helper.Po ./$(DEPDIR)/init.Po \
#	./$(DEPDIR)/interval.Po ./$(DEPDIR)/list.Po \
#	./$(DEPDIR)/lzo.Po ./$(DEPDIR)/manage.Po \
#	./$(DEPDIR)/mbuf.Po ./$(DEPDIR)/misc.Po \
#	./$(DEPDIR)/mroute.Po ./$(DEPDIR)/mss.Po \
#	./$(DEPDIR)/mtcp.Po ./$(DEPDIR)/mtu.Po \
#	./$(DEPDIR)/mudp.Po ./$(DEPDIR)/multi.Po \
#	./$(DEPDIR)/ntlm.Po ./$(DEPDIR)/occ.Po \
#	./$(DEPDIR)/openvpn.Po ./$(DEPDIR)/options.Po \
#	./$(DEPDIR)/otime.Po ./$(DEPDIR)/packet_id.Po \
#	./$(DEPDIR)/perf.Po ./$(DEPDIR)/ping.Po \
#	./$(DEPDIR)/plugin.Po ./$(DEPDIR)/pool.Po \
#	./$(DEPDIR)/proto.Po ./$(DEPDIR)/proxy.Po \
#	./$(DEPDIR)/push.Po ./$(DEPDIR)/reliable.Po \
#	./$(DEPDIR)/route.Po ./$(DEPDIR)/schedule.Po \
#	./$(DEPDIR)/session_id.Po ./$(DEPDIR)/shaper.Po \
#	./$(DEPDIR)/sig.Po ./$(DEPDIR)/socket.Po \
#	./$(DEPDIR)/socks.Po ./$(DEPDIR)/ssl.Po \
#	./$(DEPDIR)/status.Po ./$(DEPDIR)/thread.Po \
#	./$(DEPDIR)/tun.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = -g -O2
DIST_SOURCES = $(openvpn_SOURCES)

NROFF = nroff
MANS = $(man_MANS)
DIST_COMMON = README $(dist_noinst_SCRIPTS) AUTHORS COPYING ChangeLog \
	INSTALL Makefile.am Makefile.in NEWS acinclude.m4 aclocal.m4 \
	config-win32.h.in config.guess config.h.in config.sub configure \
	configure.ac depcomp install-sh memcmp.c missing mkinstalldirs \
	openvpn.spec.in
SOURCES = $(openvpn_SOURCES) $(nodist_openvpn_SOURCES)

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj

am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)

$(top_builddir)/config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck
$(srcdir)/configure:  $(srcdir)/configure.ac $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)
	cd $(srcdir) && $(AUTOCONF)

$(ACLOCAL_M4):  configure.ac acinclude.m4
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h

$(srcdir)/config.h.in:  $(top_srcdir)/configure.ac $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOHEADER)
	touch $(srcdir)/config.h.in

distclean-hdr:
	-rm -f config.h stamp-h1
openvpn.spec: $(top_builddir)/config.status openvpn.spec.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
config-win32.h: $(top_builddir)/config.status config-win32.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-win32/openvpn.nsi: $(top_builddir)/config.status $(top_srcdir)/install-win32/openvpn.nsi.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sbinPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(sbindir)
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(sbinPROGRAMS_INSTALL) $$p $(DESTDIR)$(sbindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(sbinPROGRAMS_INSTALL) $$p $(DESTDIR)$(sbindir)/$$f; \
	  else :; fi; \
	done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(sbindir)/$$f"; \
	  rm -f $(DESTDIR)$(sbindir)/$$f; \
	done

clean-sbinPROGRAMS:
	-test -z "$(sbin_PROGRAMS)" || rm -f $(sbin_PROGRAMS)
openvpn$(EXEEXT): $(openvpn_OBJECTS) $(openvpn_DEPENDENCIES) 
	@rm -f openvpn$(EXEEXT)
	$(LINK) $(openvpn_LDFLAGS) $(openvpn_OBJECTS) $(openvpn_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

#include $(DEPDIR)/memcmp.Po
#include ./$(DEPDIR)/base64.Po
#include ./$(DEPDIR)/buffer.Po
#include ./$(DEPDIR)/crypto.Po
#include ./$(DEPDIR)/error.Po
#include ./$(DEPDIR)/event.Po
#include ./$(DEPDIR)/fdmisc.Po
#include ./$(DEPDIR)/forward.Po
#include ./$(DEPDIR)/fragment.Po
#include ./$(DEPDIR)/gremlin.Po
#include ./$(DEPDIR)/helper.Po
#include ./$(DEPDIR)/init.Po
#include ./$(DEPDIR)/interval.Po
#include ./$(DEPDIR)/list.Po
#include ./$(DEPDIR)/lzo.Po
#include ./$(DEPDIR)/manage.Po
#include ./$(DEPDIR)/mbuf.Po
#include ./$(DEPDIR)/misc.Po
#include ./$(DEPDIR)/mroute.Po
#include ./$(DEPDIR)/mss.Po
#include ./$(DEPDIR)/mtcp.Po
#include ./$(DEPDIR)/mtu.Po
#include ./$(DEPDIR)/mudp.Po
#include ./$(DEPDIR)/multi.Po
#include ./$(DEPDIR)/ntlm.Po
#include ./$(DEPDIR)/occ.Po
#include ./$(DEPDIR)/openvpn.Po
#include ./$(DEPDIR)/options.Po
#include ./$(DEPDIR)/otime.Po
#include ./$(DEPDIR)/packet_id.Po
#include ./$(DEPDIR)/perf.Po
#include ./$(DEPDIR)/ping.Po
#include ./$(DEPDIR)/plugin.Po
#include ./$(DEPDIR)/pool.Po
#include ./$(DEPDIR)/proto.Po
#include ./$(DEPDIR)/proxy.Po
#include ./$(DEPDIR)/push.Po
#include ./$(DEPDIR)/reliable.Po
#include ./$(DEPDIR)/route.Po
#include ./$(DEPDIR)/schedule.Po
#include ./$(DEPDIR)/session_id.Po
#include ./$(DEPDIR)/shaper.Po
#include ./$(DEPDIR)/sig.Po
#include ./$(DEPDIR)/socket.Po
#include ./$(DEPDIR)/socks.Po
#include ./$(DEPDIR)/ssl.Po
#include ./$(DEPDIR)/status.Po
#include ./$(DEPDIR)/thread.Po
#include ./$(DEPDIR)/tun.Po

distclean-depend:
	-rm -rf $(DEPDIR) ./$(DEPDIR)

.c.o:
#	source='$<' object='$@' libtool=no 
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
#	source='$<' object='$@' libtool=no 
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(COMPILE) -c `cygpath -w $<`
CCDEPMODE = depmode=none
uninstall-info-am:

man8dir = $(mandir)/man8
install-man8: $(man8_MANS) $(man_MANS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(man8dir)
	@list='$(man8_MANS) $(dist_man8_MANS) $(nodist_man8_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.8*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  if test -f $(srcdir)/$$i; then file=$(srcdir)/$$i; \
	  else file=$$i; fi; \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  case "$$ext" in \
	    8*) ;; \
	    *) ext='8' ;; \
	  esac; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " $(INSTALL_DATA) $$file $(DESTDIR)$(man8dir)/$$inst"; \
	  $(INSTALL_DATA) $$file $(DESTDIR)$(man8dir)/$$inst; \
	done
uninstall-man8:
	@$(NORMAL_UNINSTALL)
	@list='$(man8_MANS) $(dist_man8_MANS) $(nodist_man8_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.8*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " rm -f $(DESTDIR)$(man8dir)/$$inst"; \
	  rm -f $(DESTDIR)$(man8dir)/$$inst; \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xpass=`expr $$xpass + 1`; \
	        failed=`expr $$failed + 1`; \
	        echo "XPASS: $$tst"; \
	      ;; \
	      *) \
	        echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xfail=`expr $$xfail + 1`; \
	        echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
	        failed=`expr $$failed + 1`; \
	        echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes=`echo "$$banner" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = .
distdir = $(PACKAGE)-$(VERSION)

am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }

GZIP_ENV = --best
distcleancheck_listfiles = find . -type f -print

distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	$(mkinstalldirs) $(distdir)/. $(distdir)/install-win32
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="${top_distdir}" distdir="$(distdir)" \
	  dist-hook
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist dist-all: distdir
	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	$(am__remove_distdir)
	GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(AMTAR) xf -
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/=build
	mkdir $(distdir)/=inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/=inst && pwd` \
	  && cd $(distdir)/=build \
	  && ../configure --srcdir=.. --prefix=$$dc_install_base \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && (test `find $$dc_install_base -type f -print | wc -l` -le 1 \
	      || { echo "ERROR: files left after uninstall:" ; \
	           find $$dc_install_base -type f -print ; \
	           exit 1; } >&2 ) \
	  && $(MAKE) $(AM_MAKEFLAGS) dist-gzip \
	  && rm -f $(distdir).tar.gz \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@echo "$(distdir).tar.gz is ready for distribution" | \
	  sed 'h;s/./=/g;p;x;p;x'
distcleancheck: distclean
	if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS) $(MANS) config.h

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(sbindir) $(DESTDIR)$(man8dir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-man

install-exec-am: install-sbinPROGRAMS

install-info: install-info-am

install-man: install-man8

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf autom4te.cache
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-info-am uninstall-man uninstall-sbinPROGRAMS

uninstall-man: uninstall-man8

.PHONY: GTAGS all all-am check check-TESTS check-am clean clean-generic \
	clean-sbinPROGRAMS dist dist-all dist-gzip distcheck distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-hdr distclean-tags distcleancheck distdir dvi dvi-am \
	info info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-man8 install-sbinPROGRAMS install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic tags uninstall uninstall-am \
	uninstall-info-am uninstall-man uninstall-man8 \
	uninstall-sbinPROGRAMS


.PHONY: plugin

dist-hook:
	cd $(distdir) && for i in $(EXTRA_DIST) ; do find $$i -name .svn -type d -prune -exec rm -rf '{}' ';' ; rm -f `find $$i -type f | grep -E '(^|\/)\.?\#|\~$$|\.s?o$$'` ; done
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
